/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tools;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Brandon
 */
public class NpcMaker extends javax.swing.JFrame {
    static java.awt.image.BufferedImage[] currImage;
    static int fps=60;
    static double spf = 1000d/fps;
    static long currTime;
    static int frame=0;
    /**
     * Creates new form NpcMaker
     */
    public NpcMaker() {
        currTime=System.currentTimeMillis();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imgPanel = new javax.swing.JPanel(){
            public void paintComponent(java.awt.Graphics g){
                super.paintComponent(g);
                repaint();
                if(currImage!=null){
                    //currTime+=spf;
                    //sleepTime = currTime - System.currentTimeMillis();
                    //if(sleepTime>=0)
                    //try{Thread.sleep(sleepTime);}catch(InterruptedException e){}
                    if(System.currentTimeMillis()>=currTime+spf){
                        frame++;
                        currTime=System.currentTimeMillis();
                    }
                    frame=frame%currImage.length;
                    g.drawImage(currImage[frame],0,0,320,320,null);
                }
            }
        };
        jLabel1 = new javax.swing.JLabel();
        nameTxtField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        walkDownTxtField = new javax.swing.JTextField();
        walkUpTxtField = new javax.swing.JTextField();
        idleTxtField = new javax.swing.JTextField();
        walkLeftTxtField = new javax.swing.JTextField();
        walkRightTxtField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        neutralTxtField = new javax.swing.JTextField();
        happyTxtField = new javax.swing.JTextField();
        sadTxtField = new javax.swing.JTextField();
        angryTxtField = new javax.swing.JTextField();
        idleBtn = new javax.swing.JButton();
        upBtn = new javax.swing.JButton();
        downBtn = new javax.swing.JButton();
        leftBtn = new javax.swing.JButton();
        rightBtn = new javax.swing.JButton();
        neutralBtn = new javax.swing.JButton();
        happyBtn = new javax.swing.JButton();
        sadBtn = new javax.swing.JButton();
        angryBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        conversationTxtField = new javax.swing.JTextArea();
        createBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        helpBtn = new javax.swing.JButton();
        label1 = new java.awt.Label();
        fpsTxtField = new javax.swing.JTextField();
        npcRdBtn = new javax.swing.JRadioButton();
        shopRdBtn = new javax.swing.JRadioButton();
        innRdBtn = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        shopModel = new javax.swing.DefaultListModel<>();
        shopList = new javax.swing.JList(shopModel);
        label2 = new java.awt.Label();
        shopAddBtn = new javax.swing.JButton();
        shopRemoveBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        priceTxtField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        imgPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        imgPanel.setPreferredSize(new java.awt.Dimension(320, 320));

        javax.swing.GroupLayout imgPanelLayout = new javax.swing.GroupLayout(imgPanel);
        imgPanel.setLayout(imgPanelLayout);
        imgPanelLayout.setHorizontalGroup(
            imgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );
        imgPanelLayout.setVerticalGroup(
            imgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );

        jLabel1.setText("Name");

        jLabel2.setText("Idle Animation");

        jLabel3.setText("Walking Up Animation");

        jLabel4.setText("Walking Down Animation");

        jLabel5.setText("Walking Left Animation");

        jLabel7.setText("Neutral Face Animation");

        jLabel8.setText("Happy Face Animation");

        jLabel9.setText("Sad Face Animation");

        jLabel10.setText("Angry Face Animation");

        walkDownTxtField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                walkDownTxtFieldMouseEntered(evt);
            }
        });

        walkUpTxtField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                walkUpTxtFieldMouseEntered(evt);
            }
        });

        idleTxtField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                idleTxtFieldMouseEntered(evt);
            }
        });

        walkLeftTxtField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                walkLeftTxtFieldMouseEntered(evt);
            }
        });

        walkRightTxtField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                walkRightTxtFieldMouseEntered(evt);
            }
        });

        jLabel6.setText("Walking Right Animation");

        neutralTxtField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                neutralTxtFieldMouseEntered(evt);
            }
        });

        happyTxtField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                happyTxtFieldMouseEntered(evt);
            }
        });

        sadTxtField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sadTxtFieldMouseEntered(evt);
            }
        });

        angryTxtField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                angryTxtFieldMouseEntered(evt);
            }
        });

        idleBtn.setText("Browse");
        idleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idleBtnActionPerformed(evt);
            }
        });

        upBtn.setText("Browse");
        upBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upBtnActionPerformed(evt);
            }
        });

        downBtn.setText("Browse");
        downBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downBtnActionPerformed(evt);
            }
        });

        leftBtn.setText("Browse");
        leftBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftBtnActionPerformed(evt);
            }
        });

        rightBtn.setText("Browse");
        rightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightBtnActionPerformed(evt);
            }
        });

        neutralBtn.setText("Browse");
        neutralBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neutralBtnActionPerformed(evt);
            }
        });

        happyBtn.setText("Browse");
        happyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                happyBtnActionPerformed(evt);
            }
        });

        sadBtn.setText("Browse");
        sadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sadBtnActionPerformed(evt);
            }
        });

        angryBtn.setText("Browse");
        angryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                angryBtnActionPerformed(evt);
            }
        });

        jLabel11.setText("Conversational Text");

        conversationTxtField.setColumns(20);
        conversationTxtField.setRows(5);
        jScrollPane1.setViewportView(conversationTxtField);

        createBtn.setText("Create");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        helpBtn.setText("Help");
        helpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpBtnActionPerformed(evt);
            }
        });

        label1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        label1.setText("< FPS of animation (Not necesary the FPS this will animate in the game)");

        fpsTxtField.setText("60");
        fpsTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fpsTxtFieldKeyReleased(evt);
            }
        });

        npcRdBtn.setSelected(true);
        npcRdBtn.setText("NPC");
        npcRdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npcRdBtnActionPerformed(evt);
            }
        });

        shopRdBtn.setText("Shop");
        shopRdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shopRdBtnActionPerformed(evt);
            }
        });

        innRdBtn.setText("Inn");
        innRdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                innRdBtnActionPerformed(evt);
            }
        });

        shopList.setEnabled(false);
        jScrollPane2.setViewportView(shopList);

        label2.setText("Shop Merchandise");

        shopAddBtn.setText("Add");
        shopAddBtn.setEnabled(false);

        shopRemoveBtn.setText("Remove");
        shopRemoveBtn.setEnabled(false);

        jLabel12.setText("Inn Price");

        priceTxtField.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imgPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel6))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(walkLeftTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                                    .addComponent(walkRightTxtField)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel2))
                                                .addGap(16, 16, 16)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(idleTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                                    .addComponent(walkUpTxtField)
                                                    .addComponent(walkDownTxtField)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel7)
                                                    .addComponent(jLabel8)
                                                    .addComponent(jLabel9)
                                                    .addComponent(jLabel10))
                                                .addGap(22, 22, 22)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(neutralTxtField)
                                                    .addComponent(happyTxtField)
                                                    .addComponent(sadTxtField)
                                                    .addComponent(angryTxtField))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(idleBtn)
                                            .addComponent(upBtn)
                                            .addComponent(downBtn)
                                            .addComponent(leftBtn)
                                            .addComponent(rightBtn)
                                            .addComponent(neutralBtn)
                                            .addComponent(happyBtn)
                                            .addComponent(sadBtn)
                                            .addComponent(angryBtn)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(fpsTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(npcRdBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(shopRdBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(innRdBtn)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(priceTxtField))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(shopRemoveBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(shopAddBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(helpBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(npcRdBtn)
                                    .addComponent(shopRdBtn)
                                    .addComponent(innRdBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(idleTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idleBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(walkUpTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(upBtn))
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(walkDownTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(downBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(walkLeftTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(leftBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(walkRightTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rightBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(neutralTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(neutralBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(happyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(happyBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(sadTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sadBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(angryTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(angryBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(imgPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fpsTxtField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(shopAddBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(shopRemoveBtn)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(priceTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createBtn)
                    .addComponent(helpBtn)
                    .addComponent(closeBtn))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idleTxtFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idleTxtFieldMouseEntered
        if(!idleTxtField.getText().equals("")){
            try{
                String[] paths = idleTxtField.getText().split(",");
                currImage = new java.awt.image.BufferedImage[paths.length];
                for(int i=0;i<paths.length;i++)
                    currImage[i] = javax.imageio.ImageIO.read(new java.io.File(paths[i]));
            }catch(java.io.IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_idleTxtFieldMouseEntered

    private void walkUpTxtFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_walkUpTxtFieldMouseEntered
        if(!walkUpTxtField.getText().equals("")){
            try{
                String[] paths = walkUpTxtField.getText().split(",");
                currImage = new java.awt.image.BufferedImage[paths.length];
                for(int i=0;i<paths.length;i++)
                    currImage[i] = javax.imageio.ImageIO.read(new java.io.File(paths[i]));
            }catch(java.io.IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_walkUpTxtFieldMouseEntered

    private void walkDownTxtFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_walkDownTxtFieldMouseEntered
        if(!walkDownTxtField.getText().equals("")){
            try{
                String[] paths = walkDownTxtField.getText().split(",");
                currImage = new java.awt.image.BufferedImage[paths.length];
                for(int i=0;i<paths.length;i++)
                    currImage[i] = javax.imageio.ImageIO.read(new java.io.File(paths[i]));
            }catch(java.io.IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_walkDownTxtFieldMouseEntered

    private void walkLeftTxtFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_walkLeftTxtFieldMouseEntered
        if(!walkLeftTxtField.getText().equals("")){
            try{
                String[] paths = walkLeftTxtField.getText().split(",");
                currImage = new java.awt.image.BufferedImage[paths.length];
                for(int i=0;i<paths.length;i++)
                    currImage[i] = javax.imageio.ImageIO.read(new java.io.File(paths[i]));
            }catch(java.io.IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_walkLeftTxtFieldMouseEntered

    private void walkRightTxtFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_walkRightTxtFieldMouseEntered
        if(!walkRightTxtField.getText().equals("")){
            try{
                String[] paths = walkRightTxtField.getText().split(",");
                currImage = new java.awt.image.BufferedImage[paths.length];
                for(int i=0;i<paths.length;i++)
                    currImage[i] = javax.imageio.ImageIO.read(new java.io.File(paths[i]));
            }catch(java.io.IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_walkRightTxtFieldMouseEntered

    private void neutralTxtFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_neutralTxtFieldMouseEntered
        if(!neutralTxtField.getText().equals("")){
            try{
                String[] paths = neutralTxtField.getText().split(",");
                currImage = new java.awt.image.BufferedImage[paths.length];
                for(int i=0;i<paths.length;i++)
                    currImage[i] = javax.imageio.ImageIO.read(new java.io.File(paths[i]));
            }catch(java.io.IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_neutralTxtFieldMouseEntered

    private void happyTxtFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_happyTxtFieldMouseEntered
        if(!happyTxtField.getText().equals("")){
            try{
                String[] paths = happyTxtField.getText().split(",");
                currImage = new java.awt.image.BufferedImage[paths.length];
                for(int i=0;i<paths.length;i++)
                    currImage[i] = javax.imageio.ImageIO.read(new java.io.File(paths[i]));
            }catch(java.io.IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_happyTxtFieldMouseEntered

    private void sadTxtFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sadTxtFieldMouseEntered
        if(!sadTxtField.getText().equals("")){
            try{
                String[] paths = sadTxtField.getText().split(",");
                currImage = new java.awt.image.BufferedImage[paths.length];
                for(int i=0;i<paths.length;i++)
                    currImage[i] = javax.imageio.ImageIO.read(new java.io.File(paths[i]));
            }catch(java.io.IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_sadTxtFieldMouseEntered

    private void angryTxtFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_angryTxtFieldMouseEntered
        if(!angryTxtField.getText().equals("")){
            try{
                String[] paths = angryTxtField.getText().split(",");
                currImage = new java.awt.image.BufferedImage[paths.length];
                for(int i=0;i<paths.length;i++)
                    currImage[i] = javax.imageio.ImageIO.read(new java.io.File(paths[i]));
            }catch(java.io.IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_angryTxtFieldMouseEntered

    private void idleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idleBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        chooser.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image","jpg", "jpeg","png","bmp","gif","tif","tiff");
        chooser.setFileFilter(filter);
        int value = chooser.showOpenDialog(this);
        if(value==JFileChooser.APPROVE_OPTION){
            java.io.File files[] = chooser.getSelectedFiles();//substring then add .
            for(int i=0;i<files.length;i++){
                String relative = '.'+files[i].getPath().substring(System.getProperty("user.dir").length());
                if(i!=0)
                    idleTxtField.setText(idleTxtField.getText()+","+relative);
                else
                    idleTxtField.setText(relative);
            }
        }
    }//GEN-LAST:event_idleBtnActionPerformed

    private void upBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        chooser.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image","jpg", "jpeg","png","bmp","gif","tif","tiff");
        chooser.setFileFilter(filter);
        int value = chooser.showOpenDialog(this);
        if(value==JFileChooser.APPROVE_OPTION){
            java.io.File files[] = chooser.getSelectedFiles();
            for(int i=0;i<files.length;i++){
                String relative = '.'+files[i].getPath().substring(System.getProperty("user.dir").length());
                if(i!=0)
                    walkUpTxtField.setText(walkUpTxtField.getText()+","+relative);
                else
                    walkUpTxtField.setText(relative);
            }
        }
    }//GEN-LAST:event_upBtnActionPerformed

    private void downBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        chooser.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image","jpg", "jpeg","png","bmp","gif","tif","tiff");
        chooser.setFileFilter(filter);
        int value = chooser.showOpenDialog(this);
        if(value==JFileChooser.APPROVE_OPTION){
            java.io.File files[] = chooser.getSelectedFiles();
            for(int i=0;i<files.length;i++){
                String relative = '.'+files[i].getPath().substring(System.getProperty("user.dir").length());
                if(i!=0)
                    walkDownTxtField.setText(walkDownTxtField.getText()+","+relative);
                else
                    walkDownTxtField.setText(relative);
            }
        }
    }//GEN-LAST:event_downBtnActionPerformed

    private void leftBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        chooser.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image","jpg", "jpeg","png","bmp","gif","tif","tiff");
        chooser.setFileFilter(filter);
        int value = chooser.showOpenDialog(this);
        if(value==JFileChooser.APPROVE_OPTION){
            java.io.File files[] = chooser.getSelectedFiles();
            for(int i=0;i<files.length;i++){
                String relative = '.'+files[i].getPath().substring(System.getProperty("user.dir").length());
                if(i!=0)
                    walkLeftTxtField.setText(walkLeftTxtField.getText()+","+relative);
                else
                    walkLeftTxtField.setText(relative);
            }
        }
    }//GEN-LAST:event_leftBtnActionPerformed

    private void rightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        chooser.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image","jpg", "jpeg","png","bmp","gif","tif","tiff");
        chooser.setFileFilter(filter);
        int value = chooser.showOpenDialog(this);
        if(value==JFileChooser.APPROVE_OPTION){
            java.io.File files[] = chooser.getSelectedFiles();
            for(int i=0;i<files.length;i++){
                String relative = '.'+files[i].getPath().substring(System.getProperty("user.dir").length());
                if(i!=0)
                    walkRightTxtField.setText(walkRightTxtField.getText()+","+relative);
                else
                    walkRightTxtField.setText(relative);
            }
        }
    }//GEN-LAST:event_rightBtnActionPerformed

    private void neutralBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neutralBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        chooser.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image","jpg", "jpeg","png","bmp","gif","tif","tiff");
        chooser.setFileFilter(filter);
        int value = chooser.showOpenDialog(this);
        if(value==JFileChooser.APPROVE_OPTION){
            java.io.File files[] = chooser.getSelectedFiles();
            for(int i=0;i<files.length;i++){
                String relative = '.'+files[i].getPath().substring(System.getProperty("user.dir").length());
                if(i!=0)
                    neutralTxtField.setText(neutralTxtField.getText()+","+relative);
                else
                    neutralTxtField.setText(relative);
            }
        }
    }//GEN-LAST:event_neutralBtnActionPerformed

    private void happyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_happyBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        chooser.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image","jpg", "jpeg","png","bmp","gif","tif","tiff");
        chooser.setFileFilter(filter);
        int value = chooser.showOpenDialog(this);
        if(value==JFileChooser.APPROVE_OPTION){
            java.io.File files[] = chooser.getSelectedFiles();
            for(int i=0;i<files.length;i++){
                String relative = '.'+files[i].getPath().substring(System.getProperty("user.dir").length());
                if(i!=0)
                    happyTxtField.setText(happyTxtField.getText()+","+relative);
                else
                    happyTxtField.setText(relative);
            }
        }
    }//GEN-LAST:event_happyBtnActionPerformed

    private void sadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sadBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        chooser.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image","jpg", "jpeg","png","bmp","gif","tif","tiff");
        chooser.setFileFilter(filter);
        int value = chooser.showOpenDialog(this);
        if(value==JFileChooser.APPROVE_OPTION){
            java.io.File files[] = chooser.getSelectedFiles();
            for(int i=0;i<files.length;i++){
                String relative = '.'+files[i].getPath().substring(System.getProperty("user.dir").length());
                if(i!=0)
                    sadTxtField.setText(sadTxtField.getText()+","+relative);
                else
                    sadTxtField.setText(relative);
            }
        }
    }//GEN-LAST:event_sadBtnActionPerformed

    private void angryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_angryBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        chooser.setCurrentDirectory(new java.io.File(System.getProperty("user.dir")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image","jpg", "jpeg","png","bmp","gif","tif","tiff");
        chooser.setFileFilter(filter);
        int value = chooser.showOpenDialog(this);
        if(value==JFileChooser.APPROVE_OPTION){
            java.io.File files[] = chooser.getSelectedFiles();
            for(int i=0;i<files.length;i++){
                String relative = '.'+files[i].getPath().substring(System.getProperty("user.dir").length());
                if(i!=0)
                    angryTxtField.setText(angryTxtField.getText()+","+relative);
                else
                    angryTxtField.setText(relative);
            }
        }
    }//GEN-LAST:event_angryBtnActionPerformed

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        //Checks
        if(nameTxtField.getText()==null||nameTxtField.getText().length()==0){
            JOptionPane.showMessageDialog(this,"NPC must have a name");
            return;
        }
        if(idleTxtField.getText()==null||idleTxtField.getText().length()==0){
            JOptionPane.showMessageDialog(this,"NPC must have an idle field image");
            return;
        }
        if(neutralTxtField.getText()==null||neutralTxtField.getText().length()==0){
            JOptionPane.showMessageDialog(this,"NPC must have a neutral face image");
            return;
        }
        if(npcRdBtn.isSelected()){
            //Writing
            try(java.io.FileWriter fw = new java.io.FileWriter(new java.io.File(nameTxtField.getText()+".npc"))){
                fw.write(idleTxtField.getText()+'\n');
                fw.write(walkUpTxtField.getText().length()!=0?walkUpTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(walkDownTxtField.getText().length()!=0?walkDownTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(walkLeftTxtField.getText().length()!=0?walkLeftTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(walkRightTxtField.getText().length()!=0?walkRightTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(neutralTxtField.getText()+'\n');
                fw.write(happyTxtField.getText().length()!=0?happyTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(sadTxtField.getText().length()!=0?sadTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(angryTxtField.getText().length()!=0?angryTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(conversationTxtField.getText());
                System.out.println("NPC Created!");
                JOptionPane.showMessageDialog(this,"NPC Created!");
            }catch(java.io.IOException e){
                e.printStackTrace();
            }
        }else if(shopRdBtn.isSelected()){
            try(java.io.FileWriter fw = new java.io.FileWriter(new java.io.File(nameTxtField.getText()+".snpc"))){
                fw.write(idleTxtField.getText()+'\n');
                fw.write(neutralTxtField.getText()+'\n');
                fw.write(happyTxtField.getText().length()!=0?happyTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(sadTxtField.getText().length()!=0?sadTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(angryTxtField.getText().length()!=0?angryTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(conversationTxtField.getText()+"\n");
                //List
                for(int i=0;i<shopModel.size();i++){
                    fw.write(shopModel.get(i)+'\n');//NumberItemName
                }
                JOptionPane.showMessageDialog(this,"Shop NPC Created!");
            }catch(java.io.IOException e){
                e.printStackTrace();
            }
        }else if(innRdBtn.isSelected()){
            int price=0;
            try{
                price = Integer.parseInt(priceTxtField.getText());
                if(price<0){
                    JOptionPane.showMessageDialog(this,"Price must be >= 0");
                    return;
                }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this,"Price must be a number >= 0");
            }
            try(java.io.FileWriter fw = new java.io.FileWriter(new java.io.File(nameTxtField.getText()+".inpc"))){
                fw.write((char)price);
                fw.write(idleTxtField.getText()+'\n');
                fw.write(neutralTxtField.getText()+'\n');
                fw.write(happyTxtField.getText().length()!=0?happyTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(sadTxtField.getText().length()!=0?sadTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(angryTxtField.getText().length()!=0?angryTxtField.getText()+'\n':((char)0)+"\n");
                fw.write(conversationTxtField.getText()+"\n");
                JOptionPane.showMessageDialog(this,"Inn NPC Created!");
            }catch(java.io.IOException e){
                e.printStackTrace();
            }
        }else
            JOptionPane.showMessageDialog(this, "Selected an NPC type!");
        
    }//GEN-LAST:event_createBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_closeBtnActionPerformed

    private void fpsTxtFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fpsTxtFieldKeyReleased
        try{
            fps = Integer.parseInt(fpsTxtField.getText());
            spf = 1000d/fps;
        }catch(NumberFormatException e){
            fps=0;
        }
    }//GEN-LAST:event_fpsTxtFieldKeyReleased

    private void helpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpBtnActionPerformed
        JOptionPane.showMessageDialog(this,"Formatting For NPC:\n<a>one guy talking\nAnother guy talking</a><b>Some text</b><c>more text later in the story</c> etc..\nnumbers do not have to be consecutive, but increasing\nSingle digit id's must be preceded by a \'0\'");
    }//GEN-LAST:event_helpBtnActionPerformed

    private void npcRdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npcRdBtnActionPerformed
        innRdBtn.setSelected(false);
        shopRdBtn.setSelected(false);
        shopAddBtn.setEnabled(false);
        shopRemoveBtn.setEnabled(false);
        shopList.setEnabled(false);
        priceTxtField.setEnabled(false);
        
        walkUpTxtField.setEnabled(true);
        walkDownTxtField.setEnabled(true);
        walkLeftTxtField.setEnabled(true);
        walkRightTxtField.setEnabled(true);
        upBtn.setEnabled(true);
        downBtn.setEnabled(true);
        leftBtn.setEnabled(true);
        rightBtn.setEnabled(true);
    }//GEN-LAST:event_npcRdBtnActionPerformed

    private void shopRdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shopRdBtnActionPerformed
        innRdBtn.setSelected(false);
        npcRdBtn.setSelected(false);
        shopAddBtn.setEnabled(true);
        shopRemoveBtn.setEnabled(true);
        shopList.setEnabled(true);
        priceTxtField.setEnabled(false);
        
        walkUpTxtField.setEnabled(false);
        walkDownTxtField.setEnabled(false);
        walkLeftTxtField.setEnabled(false);
        walkRightTxtField.setEnabled(false);
        upBtn.setEnabled(false);
        downBtn.setEnabled(false);
        leftBtn.setEnabled(false);
        rightBtn.setEnabled(false);
    }//GEN-LAST:event_shopRdBtnActionPerformed

    private void innRdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_innRdBtnActionPerformed
        npcRdBtn.setSelected(false);
        shopRdBtn.setSelected(false);
        shopAddBtn.setEnabled(false);
        shopRemoveBtn.setEnabled(false);
        shopList.setEnabled(false);
        priceTxtField.setEnabled(true);
        
        walkUpTxtField.setEnabled(false);
        walkDownTxtField.setEnabled(false);
        walkLeftTxtField.setEnabled(false);
        walkRightTxtField.setEnabled(false);
        upBtn.setEnabled(false);
        downBtn.setEnabled(false);
        leftBtn.setEnabled(false);
        rightBtn.setEnabled(false);
    }//GEN-LAST:event_innRdBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NpcMaker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NpcMaker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NpcMaker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NpcMaker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NpcMaker().setVisible(true);
            }
        });
    }
    private javax.swing.DefaultListModel<String> shopModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton angryBtn;
    private javax.swing.JTextField angryTxtField;
    private javax.swing.JButton closeBtn;
    private javax.swing.JTextArea conversationTxtField;
    private javax.swing.JButton createBtn;
    private javax.swing.JButton downBtn;
    private javax.swing.JTextField fpsTxtField;
    private javax.swing.JButton happyBtn;
    private javax.swing.JTextField happyTxtField;
    private javax.swing.JButton helpBtn;
    private javax.swing.JButton idleBtn;
    private javax.swing.JTextField idleTxtField;
    private javax.swing.JPanel imgPanel;
    private javax.swing.JRadioButton innRdBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JButton leftBtn;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JButton neutralBtn;
    private javax.swing.JTextField neutralTxtField;
    private javax.swing.JRadioButton npcRdBtn;
    private javax.swing.JTextField priceTxtField;
    private javax.swing.JButton rightBtn;
    private javax.swing.JButton sadBtn;
    private javax.swing.JTextField sadTxtField;
    private javax.swing.JButton shopAddBtn;
    private javax.swing.JList shopList;
    private javax.swing.JRadioButton shopRdBtn;
    private javax.swing.JButton shopRemoveBtn;
    private javax.swing.JButton upBtn;
    private javax.swing.JTextField walkDownTxtField;
    private javax.swing.JTextField walkLeftTxtField;
    private javax.swing.JTextField walkRightTxtField;
    private javax.swing.JTextField walkUpTxtField;
    // End of variables declaration//GEN-END:variables
}
